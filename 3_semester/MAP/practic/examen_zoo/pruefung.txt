1p Identifizieren Sie jede Verantwortung und jedes Anliegen Ihrer Lösung korrekt und platzieren Sie sie in Komponenten, die sie umfassen.

Entwickeln Sie ein System zur Verwaltung des Tierbestands eines Zoos. Sie finden den Tierbestand des Zoos in der Datei "animal_inventory.csv" mit den Spalten: "name", "species", "age", "enclosure_type" und "health_status". Die Spalten sind durch das ","-Zeichen getrennt.

A. 2p Lesen Sie den Inhalt der Datei "animal_inventory.csv" und wandeln Sie jede Zeile in ein Java-Objekt um,
    indem Sie es entsprechend modellieren. Erstellen Sie eine Klasse, die definiert, wie ein Eintrag aus der Datei als Objekt aussehen sollte.
    Das Ergebnis sollte vom Typ: ArrayList<Animal> sein.
B. 1p Verwenden Sie Java-Streams, um auf dem Bildschirm die Arten und die Anzahl der Tiere jeder Art anzuzeigen, absteigend sortiert nach der Anzahl.
C. 2p Verwenden Sie Java-Streams und die entsprechende .map()-Methode, um alle Namen von Tieren mit dem Gesundheitsstatus "krank"
    in eine Datei namens "sick_animals.txt" zu speichern, wobei der Name des Tieres großgeschrieben wird.
D. 1p Nutzen Sie ein Designmuster, um eine Klasse "AnimalCareTaker" zu erstellen, die tatsächlich als "AnimalThief" agiert.
    Anstatt sich um die Tiere zu kümmern, wird sie heimlich ein Tier stehlen, ohne dass es jemand merkt. Hinterlassen Sie einen Kommentar mit dem Namen des verwendeten Designmusters.
E. 1p Bereiten Sie einen Test vor, der die Umsetzung von "D" garantiert.
F. 1p Definieren Sie zwei Threads, die die Gesundheit eines Tieres überwachen. Der erste wirkt wie ein Arzt, während der
 zweite wie eine Krankheit wirkt. Wenn der Gesundheitsstatus des Tieres "krank" ist, setzt der Arzt-Thread ihn auf "gesund".
  Wenn dies geschieht, wartet der Krankheitsthread 2 Sekunden und setzt dann den Gesundheitsstatus des Tieres auf "krank".
  Die beiden Threads laufen gleichzeitig und zeigen auf dem Bildschirm die Aktion an, die sie durchführen.

Beispiel-Ausgabe:
Arzt: Tier heilen
Krankheit: 2 Sekunden warten
Krankheit: Tier krank machen
Arzt: Tier heilen
Krankheit: 2 Sekunden warten
.
.
usw.


#############################################################################################################################################################

1p Correctly identify each responsibility and concern of your solution and place them in components which encapsulate them.

Develop a system for managing a zoo's animal inventory. You will find the Zoo’s inventory in the file named "animal_inventory.csv" with columns: "name," "species," "age," "enclosure_type," and "health_status."
 The columns are separated by the "," character.

A. 2p Read the contents of the "animal_inventory.csv" file and convert each line into a Java object, modeling it accordingly.
    Create a class that defines how an entry from the file should look like as an object. The result should be of type: ArrayList<Animal>.
B. 1p Using Java streams, display on the screen the species and the number of animals of that species, sorted descending based on the count.
C. 2p Using Java streams and their respective .map() method, save to a file called "sick_animals.txt" all the names of animals with health_status set to "sick."
    but make sure that the animal name is uppercased.
D. 1p Utilize a design pattern to create a class "AnimalCareTaker" which actually acts as an “AnimalThief”.
    Instead of taking care of the animals, it will steal the animal without anyone knowing.
       Leave a comment containing the name of the design pattern which you used.
E. 1p Prepare a test to guarantee the implementation from "D."
F. 1p Define two threads which monitor an Animal health. The first one acts as a doctor while the second one acts as a disease.
    If the animal’s health status is “Sick”, the doctor thread will set it to “Healthy”.
    If this happens, the disease thread will wait 2 seconds and then set the animal’s health status to “Sick”.
    The two threads run concurrently and display on the screen the action which they’re performing.

	Example output:
	Doctor: Healing animal
	Disease: Waiting 2 seconds
	Disease: Making animal sick
	Doctor: Healing animal
	Disease: Waiting 2 seconds
	.
	.
	etc

1p ex-officio point


